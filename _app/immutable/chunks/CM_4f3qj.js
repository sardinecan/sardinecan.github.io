import{s as Y,n as q}from"./CXCHmQ-B.js";import{S as $,i as ee,d as a,a as s,k as P,c as n,l as u,g as i,e as E,m as y,h as l,j as o,H as J}from"./DuaWf0Pd.js";function te(N){let p,U="Julia : passer un argument avec include(‘file.jl’)",j,c,B="Une méthode intéressante consiste à utiliser <code>isdefined</code> pour vérifier la présence d’une source différente de paramètres avant d’utiliser <code>ARGS</code> dans le fichier que l’on souhaite inclue. Par exemple :",w,r,O="<code>main.jl</code>",x,d,C,V=`<code class="language-julia">newARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"adios"</span><span class="token punctuation">,</span><span class="token string">"amigos"</span><span class="token punctuation">]</span>
include<span class="token punctuation">(</span><span class="token string">"file.jl"</span><span class="token punctuation">)</span></code>`,S,f,K="<code>file.jl</code>",R,m,H,W=`<code class="language-julia">localARGS <span class="token operator">=</span> isdefined<span class="token punctuation">(</span><span class="token punctuation">:</span>newARGS<span class="token punctuation">)</span> <span class="token punctuation">?</span> newARGS <span class="token punctuation">:</span> ARGS
@show localARGS</code>`,T,k,Q="Ce qui donnerait :",A,_,L,X=`<code class="language-julia"><span class="token operator">></span> julia file<span class="token punctuation">.</span>jl hello world
localARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"hello"</span><span class="token punctuation">,</span><span class="token string">"world"</span><span class="token punctuation">]</span>

<span class="token operator">></span> julia main<span class="token punctuation">.</span>jl 
localARGS <span class="token operator">=</span> String<span class="token punctuation">[</span><span class="token string">"adios"</span><span class="token punctuation">,</span><span class="token string">"amigos"</span><span class="token punctuation">]</span></code>`,G,v,Z=`<p>Reassigning ARGS to make file.jl think it received arguments works, but leads to a warning (because it overwrites Base.ARGS). A better methods perhaps is to use isdefined to check for a different source of parameters before using ARGS in file.jl.
This also allows communicating deeper through several levels of inclusion.</p>`,M,g,z="Lectures",b,h,D='<li><a href="https://stackoverflow.com/questions/44967240/juliapassing-argument-to-the-includefile-jl" rel="nofollow"><em>Julia:passing argument to the include(“file.jl”)</em></a></li>';return{c(){p=l("h1"),p.textContent=U,j=o(),c=l("p"),c.innerHTML=B,w=o(),r=l("p"),r.innerHTML=O,x=o(),d=l("pre"),C=new J(!1),S=o(),f=l("p"),f.innerHTML=K,R=o(),m=l("pre"),H=new J(!1),T=o(),k=l("p"),k.textContent=Q,A=o(),_=l("pre"),L=new J(!1),G=o(),v=l("blockquote"),v.innerHTML=Z,M=o(),g=l("h2"),g.textContent=z,b=o(),h=l("ul"),h.innerHTML=D,this.h()},l(e){p=n(e,"H1",{"data-svelte-h":!0}),u(p)!=="svelte-8dwnng"&&(p.textContent=U),j=i(e),c=n(e,"P",{"data-svelte-h":!0}),u(c)!=="svelte-id3ljr"&&(c.innerHTML=B),w=i(e),r=n(e,"P",{"data-svelte-h":!0}),u(r)!=="svelte-98gsmq"&&(r.innerHTML=O),x=i(e),d=n(e,"PRE",{class:!0});var t=E(d);C=y(t,!1),t.forEach(a),S=i(e),f=n(e,"P",{"data-svelte-h":!0}),u(f)!=="svelte-15qmxl7"&&(f.innerHTML=K),R=i(e),m=n(e,"PRE",{class:!0});var F=E(m);H=y(F,!1),F.forEach(a),T=i(e),k=n(e,"P",{"data-svelte-h":!0}),u(k)!=="svelte-1itigb9"&&(k.textContent=Q),A=i(e),_=n(e,"PRE",{class:!0});var I=E(_);L=y(I,!1),I.forEach(a),G=i(e),v=n(e,"BLOCKQUOTE",{"data-svelte-h":!0}),u(v)!=="svelte-2su3lu"&&(v.innerHTML=Z),M=i(e),g=n(e,"H2",{"data-svelte-h":!0}),u(g)!=="svelte-1u3eosd"&&(g.textContent=z),b=i(e),h=n(e,"UL",{"data-svelte-h":!0}),u(h)!=="svelte-4cntxa"&&(h.innerHTML=D),this.h()},h(){C.a=null,P(d,"class","language-julia"),H.a=null,P(m,"class","language-julia"),L.a=null,P(_,"class","language-julia")},m(e,t){s(e,p,t),s(e,j,t),s(e,c,t),s(e,w,t),s(e,r,t),s(e,x,t),s(e,d,t),C.m(V,d),s(e,S,t),s(e,f,t),s(e,R,t),s(e,m,t),H.m(W,m),s(e,T,t),s(e,k,t),s(e,A,t),s(e,_,t),L.m(X,_),s(e,G,t),s(e,v,t),s(e,M,t),s(e,g,t),s(e,b,t),s(e,h,t)},p:q,i:q,o:q,d(e){e&&(a(p),a(j),a(c),a(w),a(r),a(x),a(d),a(S),a(f),a(R),a(m),a(T),a(k),a(A),a(_),a(G),a(v),a(M),a(g),a(b),a(h))}}}const ae={title:"Julia : passer un argument avec include('file.jl')",date:"2024-05-27T00:00:00.000Z",author:"jmorvan",category:"julia",keywords:"julia ; argument ; include ; variable"},{title:le,date:ie,author:oe,category:pe,keywords:ue}=ae;class ce extends ${constructor(p){super(),ee(this,p,null,te,Y,{})}}export{ce as default,ae as metadata};
