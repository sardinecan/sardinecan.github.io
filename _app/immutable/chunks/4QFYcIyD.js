import{s as v,n as r}from"./CXCHmQ-B.js";import{S as w,i as b,d as p,a as o,k as y,c as u,l as f,g as d,e as C,m as H,h as k,j as _,H as T}from"./DuaWf0Pd.js";function j(h){let a,g="Autoriser cross-origin / cross-domain dans BaseX",l,t,m='Pour autoriser <a href="https://developer.mozilla.org/fr/docs/Web/HTTP/CORS" rel="nofollow">cross-origin et/ou cross-domain</a> dans BaseX, il suffit d’ajouter le code suivant à la fin du fichier <code>basex/webapp/WEB-INF/web.xml</code>.',c,e,i,x=`<code class="language-xml"><span class="token comment">&lt;!-- allow cross-origin --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>cross-origin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>org.eclipse.jetty.servlets.CrossOriginFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>cross-origin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span></code>`;return{c(){a=k("h1"),a.textContent=g,l=_(),t=k("p"),t.innerHTML=m,c=_(),e=k("pre"),i=new T(!1),this.h()},l(s){a=u(s,"H1",{"data-svelte-h":!0}),f(a)!=="svelte-r4n2du"&&(a.textContent=g),l=d(s),t=u(s,"P",{"data-svelte-h":!0}),f(t)!=="svelte-xkc2lz"&&(t.innerHTML=m),c=d(s),e=u(s,"PRE",{class:!0});var n=C(e);i=H(n,!1),n.forEach(p),this.h()},h(){i.a=null,y(e,"class","language-xml")},m(s,n){o(s,a,n),o(s,l,n),o(s,t,n),o(s,c,n),o(s,e,n),i.m(x,e)},p:r,i:r,o:r,d(s){s&&(p(a),p(l),p(t),p(c),p(e))}}}const P={title:"Autoriser cross-origin / cross-domain",date:"2024-04-18",category:"basex",author:"jmorvan",keywords:"basex ; xml ; cross-origin"},{title:S,date:z,category:A,author:F,keywords:L}=P;class M extends w{constructor(a){super(),b(this,a,null,j,v,{})}}export{M as default,P as metadata};
