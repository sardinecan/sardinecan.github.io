import{s as it,n as U}from"./CXCHmQ-B.js";import{S as ct,i as ut,d as s,a,k as rt,c as n,l as o,g as p,e as mt,m as dt,h as l,j as i,H as ht}from"./DuaWf0Pd.js";function ft(ot){let c,D="TEI Stylesheets",g,u,W="[works also with Linux]",H,r,B="This is a family of XSLT 2.0 stylesheets to transform TEI XML documents to various formats, including XHTML, LaTeX, XSL Formatting Objects, ePub, plain text, RDF, JSON; and to/from Word OOXML (docx) and OpenOffice (odt). They concentrate on the core TEI modules which are used for simple transcription and “born digital” writing.",E,m,G="MacOs Install",M,d,J='<li>download fork at <a href="https://github.com/sardinecan/Stylesheets" rel="nofollow">https://github.com/sardinecan/Stylesheets</a></li>',b,h,K="For your information, here are the changes made to the original makefile",F,f,Q='<li><p>variable PREFIX : <code>/usr</code> &gt; <code>/tmp/tei</code></p> <ul><li>NB <code>/tmp</code> directory is cleaned up by macOS every 3 days by default <a href="https://forums.developer.apple.com/forums/thread/71382" rel="nofollow">see apple forum</a></li></ul></li> <li><p>line <code>cp --preserve=timestamps bin/transformtei ${PREFIX}/bin</code> &gt; <code>cp -p bin/transformtei ${PREFIX}/bin</code></p></li> <li><p>line <code>cp --preserve=timestamps source/p5subset.xml ${PREFIX}/source</code> &gt; <code>cp -p source/p5subset.xml ${PREFIX}/source</code></p></li> <li><p>line <code>perl -p -i -e &#39;s+^APPHOME=.*+APPHOME=/usr/share/xml/tei/stylesheet+&#39; ${PREFIX}/bin/transformtei</code> &gt; <code>perl -p -i -e &#39;s+^APPHOME=.*+APPHOME=${PREFIX}/share/xml/tei/stylesheet+&#39; ${PREFIX}/bin/transformtei</code></p></li> <li><p>Go to stylesheets folder: <code>cd path/to/local/Stylesheets</code> and install: <code>make install</code></p> <ul><li>if the Make command doesn’t run, it’s likely that the Xcode command line is missing, to install it: <code>xcode-select --install</code></li> <li>if needed you chan change a variable for the installation: <code>make PREFIX=destination/path/for/installation install</code></li></ul></li> <li><p>add binaries to the <code>$PATH</code> in your <code>~/.zshrc</code>: <code>export PATH=$PATH:/tmp/tei/bin/</code></p></li>',S,k,V="Add custom profile",X,x,Y="Create a profile in the <code>Stylesheets/profile</code> subdirectory with the following pattern: <code>profiles/$PROFILENAME/$FORMAT/(from.xsl or to.xsl)</code> for example: <code>profiles/local/docx/from.xsl</code>",I,v,Z="to import the default transformation, add an <code>xsl:import</code> rule to the custom xslt stylesheet, for example: <code>&lt;xsl:import href=&quot;../../default/docx/from.xsl&quot; /&gt;</code>.",O,_,tt="Complete sample:",R,w,q,pt=`<code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>stylesheet</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/XSL/Transform<span class="token punctuation">"</span></span> 
  <span class="token attr-name"><span class="token namespace">xmlns:</span>xs</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema<span class="token punctuation">"</span></span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>w</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/wordprocessingml/2006/main<span class="token punctuation">"</span></span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>wne</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.microsoft.com/office/word/2006/wordml<span class="token punctuation">"</span></span>
  <span class="token attr-name"><span class="token namespace">xmlns:</span>wp</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing<span class="token punctuation">"</span></span>
  <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.tei-c.org/ns/1.0<span class="token punctuation">"</span></span>
  <span class="token attr-name">exclude-result-prefixes</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xs w<span class="token punctuation">"</span></span>
  <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>2.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>import</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../../default/docx/from.xsl<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>
  <span class="token comment">&lt;!-- nouvelles règles--></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>template</span> <span class="token attr-name">match</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>[…]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xsl:</span>template</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">xsl:</span>stylesheet</span><span class="token punctuation">></span></span></code>`,A,y,et="Then you need to reinstall the tei stylesheets: <code>cd path/to/tei/Stylesheets ; make install</code>",$,C,st="Transform",z,T,at="<li>to call a XSLT just: <code>docxtotei inputFile outputFile</code>.</li> <li>to call a XSLT with a custom profile: <code>docxtotei --profile=$PROFILENAME inputFile outputFile</code> for example <code>docxtotei --profile=local inputFile outputFile</code>.</li>",N,L,nt="NOTA BENE",j,P,lt='<li><p>Note that if your $FORMAT is docx, this directory must contain a file template.docx which is used to create .docx files from. See the sample in the default profile.</p></li> <li><p><a href="https://listserv.brown.edu/archives/cgi-bin/wa?A2=TEI-L;1123776a.1605" rel="nofollow">Converting from DOCX format</a> : “The TEI conversions from docx are better in many ways than the conversions from other the wordprocessing formats. There are also small tricks like having docx styles of ‘tei_elementName’ to get certain phrase-level elements converted.”</p></li> <li><p><a href="https://dixit.uni-koeln.de/wp-content/uploads/2015/04/Camp2-15-Sebastian_Rahtz_-_Working_with_TEI_Stylesheets__talk.pdf" rel="nofollow">https://dixit.uni-koeln.de/wp-content/uploads/2015/04/Camp2-15-Sebastian<em>Rahtz</em>-_Working_with_TEI_Stylesheets__talk.pdf</a></p></li> <li><p>the documentation is accessible in the installation directory, for example: <code>/tmp/tei/share/doc/tei-xsl/index.html</code>.</p></li>';return{c(){c=l("h1"),c.textContent=D,g=i(),u=l("p"),u.textContent=W,H=i(),r=l("p"),r.textContent=B,E=i(),m=l("h2"),m.textContent=G,M=i(),d=l("ul"),d.innerHTML=J,b=i(),h=l("p"),h.textContent=K,F=i(),f=l("ul"),f.innerHTML=Q,S=i(),k=l("h2"),k.textContent=V,X=i(),x=l("p"),x.innerHTML=Y,I=i(),v=l("p"),v.innerHTML=Z,O=i(),_=l("p"),_.textContent=tt,R=i(),w=l("pre"),q=new ht(!1),A=i(),y=l("p"),y.innerHTML=et,$=i(),C=l("h2"),C.textContent=st,z=i(),T=l("ul"),T.innerHTML=at,N=i(),L=l("h2"),L.textContent=nt,j=i(),P=l("ul"),P.innerHTML=lt,this.h()},l(t){c=n(t,"H1",{"data-svelte-h":!0}),o(c)!=="svelte-1mzg92z"&&(c.textContent=D),g=p(t),u=n(t,"P",{"data-svelte-h":!0}),o(u)!=="svelte-14fbsll"&&(u.textContent=W),H=p(t),r=n(t,"P",{"data-svelte-h":!0}),o(r)!=="svelte-1tru1uq"&&(r.textContent=B),E=p(t),m=n(t,"H2",{"data-svelte-h":!0}),o(m)!=="svelte-1twmrx0"&&(m.textContent=G),M=p(t),d=n(t,"UL",{"data-svelte-h":!0}),o(d)!=="svelte-14mf671"&&(d.innerHTML=J),b=p(t),h=n(t,"P",{"data-svelte-h":!0}),o(h)!=="svelte-tzylpm"&&(h.textContent=K),F=p(t),f=n(t,"UL",{"data-svelte-h":!0}),o(f)!=="svelte-1mfg3yi"&&(f.innerHTML=Q),S=p(t),k=n(t,"H2",{"data-svelte-h":!0}),o(k)!=="svelte-1kt1gh5"&&(k.textContent=V),X=p(t),x=n(t,"P",{"data-svelte-h":!0}),o(x)!=="svelte-158iita"&&(x.innerHTML=Y),I=p(t),v=n(t,"P",{"data-svelte-h":!0}),o(v)!=="svelte-1eegz6o"&&(v.innerHTML=Z),O=p(t),_=n(t,"P",{"data-svelte-h":!0}),o(_)!=="svelte-e9oghx"&&(_.textContent=tt),R=p(t),w=n(t,"PRE",{class:!0});var e=mt(w);q=dt(e,!1),e.forEach(s),A=p(t),y=n(t,"P",{"data-svelte-h":!0}),o(y)!=="svelte-z7ykth"&&(y.innerHTML=et),$=p(t),C=n(t,"H2",{"data-svelte-h":!0}),o(C)!=="svelte-1a6kj8q"&&(C.textContent=st),z=p(t),T=n(t,"UL",{"data-svelte-h":!0}),o(T)!=="svelte-j0u5dm"&&(T.innerHTML=at),N=p(t),L=n(t,"H2",{"data-svelte-h":!0}),o(L)!=="svelte-1ghgu3i"&&(L.textContent=nt),j=p(t),P=n(t,"UL",{"data-svelte-h":!0}),o(P)!=="svelte-1on2l82"&&(P.innerHTML=lt),this.h()},h(){q.a=null,rt(w,"class","language-xml")},m(t,e){a(t,c,e),a(t,g,e),a(t,u,e),a(t,H,e),a(t,r,e),a(t,E,e),a(t,m,e),a(t,M,e),a(t,d,e),a(t,b,e),a(t,h,e),a(t,F,e),a(t,f,e),a(t,S,e),a(t,k,e),a(t,X,e),a(t,x,e),a(t,I,e),a(t,v,e),a(t,O,e),a(t,_,e),a(t,R,e),a(t,w,e),q.m(pt,w),a(t,A,e),a(t,y,e),a(t,$,e),a(t,C,e),a(t,z,e),a(t,T,e),a(t,N,e),a(t,L,e),a(t,j,e),a(t,P,e)},p:U,i:U,o:U,d(t){t&&(s(c),s(g),s(u),s(H),s(r),s(E),s(m),s(M),s(d),s(b),s(h),s(F),s(f),s(S),s(k),s(X),s(x),s(I),s(v),s(O),s(_),s(R),s(w),s(A),s(y),s($),s(C),s(z),s(T),s(N),s(L),s(j),s(P))}}}const kt={title:"TEI Stylesheets",date:"2023-10-12",category:"tei",author:"jmorvan",keywords:"tei ; xml ; xslt ; stylesheets"},{title:_t,date:wt,category:yt,author:Ct,keywords:Tt}=kt;class Lt extends ct{constructor(c){super(),ut(this,c,null,ft,it,{})}}export{Lt as default,kt as metadata};
